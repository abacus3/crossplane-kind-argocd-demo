apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: app.crossplane.example.io
spec:
  compositeTypeRef:
    apiVersion: app.crossplane.example.io/v1alpha1
    kind: XAppWorkspace
  resources:
    - name: gitlab-project
      base:
        apiVersion: projects.gitlab.crossplane.io/v1alpha1
        kind: Project
        metadata:
          name: # patched
        spec:
          forProvider:
            # If not set, metadata.name will be used instead.
            name: "Example Demo Project"
            initializeWithReadme: true
            description: "example project description"
          providerConfigRef:
            name: gitlab-provider
          # a reference to a Kubernetes secret to which the controller will write the runnersToken
          writeConnectionSecretToRef:
            name: gitlab-project-example-project
            namespace: crossplane-system
      patches:
      - fromFieldPath: metadata.name
        toFieldPath: metadata.name
      - fromFieldPath: spec.parameters.projectName
        toFieldPath: spec.forProvider.name
      - fromFieldPath: metadata.name
        toFieldPath: status.resources[gitlab-project].name
        type: ToCompositeFieldPath
      - fromFieldPath: metadata.annotations[crossplane.io/external-name]
        toFieldPath: status.resources[gitlab-project].externalName
        type: ToCompositeFieldPath
      - fromFieldPath: kind
        toFieldPath: status.resources[gitlab-project].kind
        type: ToCompositeFieldPath
      - fromFieldPath: apiVersion
        toFieldPath: status.resources[gitlab-project].apiVersion
        type: ToCompositeFieldPath
      - fromFieldPath: status.conditions
        toFieldPath: status.resources[gitlab-project].status.conditions
        type: ToCompositeFieldPath
      - fromFieldPath: status.atProvider
        toFieldPath: status.resources[gitlab-project].status.atProvider
        type: ToCompositeFieldPath
      - fromFieldPath: status.resources
        toFieldPath: status.resources[gitlab-project].status.resources
        type: ToCompositeFieldPath
    - name: gitlab-token
      base:
        apiVersion: projects.gitlab.crossplane.io/v1alpha1
        kind: AccessToken
        metadata:
          name: # patched
        spec:
          forProvider:
            name: # patched
            projectIdRef:
              name: # patched from status field from gitlab-project
            accessLevel: 40
            expiresAt: 2024-08-15T08:00:00Z
            scopes:
              - "read_repository"
          providerConfigRef:
            name: gitlab-provider
          writeConnectionSecretToRef:
            name: # metadata.name
            namespace: crossplane-system
      patches:
      - fromFieldPath: metadata.name
        toFieldPath: metadata.name
      - fromFieldPath: metadata.name
        toFieldPath: spec.writeConnectionSecretToRef.name
      - fromFieldPath: spec.parameters.projectName
        toFieldPath: spec.forProvider.name
      - fromFieldPath: status.resources[gitlab-project].name
        toFieldPath: spec.forProvider.projectIdRef.name
        policy:
          fromFieldPath: Required
        type: FromCompositeFieldPath
      - fromFieldPath: metadata.name
        toFieldPath: status.resources[gitlab-token].name
        type: ToCompositeFieldPath
      - fromFieldPath: metadata.annotations[crossplane.io/external-name]
        toFieldPath: status.resources[gitlab-token].externalName
        type: ToCompositeFieldPath
      - fromFieldPath: kind
        toFieldPath: status.resources[gitlab-token].kind
        type: ToCompositeFieldPath
      - fromFieldPath: apiVersion
        toFieldPath: status.resources[gitlab-token].apiVersion
        type: ToCompositeFieldPath
      - fromFieldPath: status.conditions
        toFieldPath: status.resources[gitlab-token].status.conditions
        type: ToCompositeFieldPath
      - fromFieldPath: status.atProvider
        toFieldPath: status.resources[gitlab-token].status.atProvider
        type: ToCompositeFieldPath
      - fromFieldPath: status.resources
        toFieldPath: status.resources[gitlab-token].status.resources
        type: ToCompositeFieldPath
    - name: argocd-repo
      base:
        apiVersion: repositories.argocd.crossplane.io/v1alpha1
        kind: Repository
        metadata:
          name: # patched metadata.name
        spec:
          forProvider:
            repo: # patched
            type: git
            username: # token name
            passwordRef:
              name: gitlab-example-access-token # token name
              namespace: crossplane-system # token namespace
              key: token
          providerConfigRef:
            name: argocd-provider
      patches:
      - fromFieldPath: metadata.name
        toFieldPath: metadata.name
        policy:
          fromFieldPath: Required
      - fromFieldPath: status.resources[gitlab-project].status.atProvider.httpUrlToRepo
        toFieldPath: spec.forProvider.repo
        policy:
          fromFieldPath: Required
      - fromFieldPath: metadata.name
        toFieldPath: spec.forProvider.passwordRef.name
        policy:
          fromFieldPath: Required
      - fromFieldPath: spec.parameters.projectName
        toFieldPath: spec.forProvider.username
        policy:
          fromFieldPath: Required
      - fromFieldPath: status.resources[gitlab-project].status.atProvider.httpUrlToRepo
        toFieldPath: spec.forProvider.repo
        policy:
          fromFieldPath: Required
      - fromFieldPath: metadata.name
        toFieldPath: status.resources[argocd-repo].name
        type: ToCompositeFieldPath
      - fromFieldPath: metadata.annotations[crossplane.io/external-name]
        toFieldPath: status.resources[argocd-repo].externalName
        type: ToCompositeFieldPath
      - fromFieldPath: kind
        toFieldPath: status.resources[argocd-repo].kind
        type: ToCompositeFieldPath
      - fromFieldPath: apiVersion
        toFieldPath: status.resources[argocd-repo].apiVersion
        type: ToCompositeFieldPath
      - fromFieldPath: status.conditions
        toFieldPath: status.resources[argocd-repo].status.conditions
        type: ToCompositeFieldPath
      - fromFieldPath: status.atProvider
        toFieldPath: status.resources[argocd-repo].status.atProvider
        type: ToCompositeFieldPath
      - fromFieldPath: status.resources
        toFieldPath: status.resources[argocd-repo].status.resources
        type: ToCompositeFieldPath
    - name: argocd-app
      base:
        apiVersion: applications.argocd.crossplane.io/v1alpha1
        kind: Application
        metadata:
          name: # patched
        spec:
          providerConfigRef:
            name: argocd-provider
          forProvider:
            destination:
              namespace: default
              server: https://kubernetes.default.svc
            project: default
            source:
              repoURL: #patched https://github.com/stefanprodan/podinfo/
              path: .
              targetRevision: HEAD
            syncPolicy:
              automated:
                allowEmpty: true
                prune: true
                selfHeal: true
      patches:
      - fromFieldPath: metadata.name
        toFieldPath: metadata.name
        policy:
          fromFieldPath: Required
      - fromFieldPath: status.resources[gitlab-project].status.atProvider.httpUrlToRepo
        toFieldPath: spec.forProvider.source.repoURL
        policy:
          fromFieldPath: Required
      - fromFieldPath: metadata.name
        toFieldPath: status.resources[argocd-app].name
        type: ToCompositeFieldPath
      - fromFieldPath: metadata.annotations[crossplane.io/external-name]
        toFieldPath: status.resources[argocd-app].externalName
        type: ToCompositeFieldPath
      - fromFieldPath: kind
        toFieldPath: status.resources[argocd-app].kind
        type: ToCompositeFieldPath
      - fromFieldPath: apiVersion
        toFieldPath: status.resources[argocd-app].apiVersion
        type: ToCompositeFieldPath
      - fromFieldPath: status.conditions
        toFieldPath: status.resources[argocd-app].status.conditions
        type: ToCompositeFieldPath
      - fromFieldPath: status.atProvider
        toFieldPath: status.resources[argocd-app].status.atProvider
        type: ToCompositeFieldPath
      - fromFieldPath: status.resources
        toFieldPath: status.resources[argocd-app].status.resources
        type: ToCompositeFieldPath